/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  DataDestinationConnector as PrismaDataDestinationConnector,
} from "@prisma/client";

export class DataDestinationConnectorServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.DataDestinationConnectorCountArgs, "select">
  ): Promise<number> {
    return this.prisma.dataDestinationConnector.count(args);
  }

  async dataDestinationConnectors(
    args: Prisma.DataDestinationConnectorFindManyArgs
  ): Promise<PrismaDataDestinationConnector[]> {
    return this.prisma.dataDestinationConnector.findMany(args);
  }
  async dataDestinationConnector(
    args: Prisma.DataDestinationConnectorFindUniqueArgs
  ): Promise<PrismaDataDestinationConnector | null> {
    return this.prisma.dataDestinationConnector.findUnique(args);
  }
  async createDataDestinationConnector(
    args: Prisma.DataDestinationConnectorCreateArgs
  ): Promise<PrismaDataDestinationConnector> {
    return this.prisma.dataDestinationConnector.create(args);
  }
  async updateDataDestinationConnector(
    args: Prisma.DataDestinationConnectorUpdateArgs
  ): Promise<PrismaDataDestinationConnector> {
    return this.prisma.dataDestinationConnector.update(args);
  }
  async deleteDataDestinationConnector(
    args: Prisma.DataDestinationConnectorDeleteArgs
  ): Promise<PrismaDataDestinationConnector> {
    return this.prisma.dataDestinationConnector.delete(args);
  }
}
